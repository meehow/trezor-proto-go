// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: messages-debug.proto

package trproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Structure representing swipe direction
type DebugLinkDecision_DebugSwipeDirection int32

const (
	DebugLinkDecision_UP    DebugLinkDecision_DebugSwipeDirection = 0
	DebugLinkDecision_DOWN  DebugLinkDecision_DebugSwipeDirection = 1
	DebugLinkDecision_LEFT  DebugLinkDecision_DebugSwipeDirection = 2
	DebugLinkDecision_RIGHT DebugLinkDecision_DebugSwipeDirection = 3
)

// Enum value maps for DebugLinkDecision_DebugSwipeDirection.
var (
	DebugLinkDecision_DebugSwipeDirection_name = map[int32]string{
		0: "UP",
		1: "DOWN",
		2: "LEFT",
		3: "RIGHT",
	}
	DebugLinkDecision_DebugSwipeDirection_value = map[string]int32{
		"UP":    0,
		"DOWN":  1,
		"LEFT":  2,
		"RIGHT": 3,
	}
)

func (x DebugLinkDecision_DebugSwipeDirection) Enum() *DebugLinkDecision_DebugSwipeDirection {
	p := new(DebugLinkDecision_DebugSwipeDirection)
	*p = x
	return p
}

func (x DebugLinkDecision_DebugSwipeDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebugLinkDecision_DebugSwipeDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_debug_proto_enumTypes[0].Descriptor()
}

func (DebugLinkDecision_DebugSwipeDirection) Type() protoreflect.EnumType {
	return &file_messages_debug_proto_enumTypes[0]
}

func (x DebugLinkDecision_DebugSwipeDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DebugLinkDecision_DebugSwipeDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DebugLinkDecision_DebugSwipeDirection(num)
	return nil
}

// Deprecated: Use DebugLinkDecision_DebugSwipeDirection.Descriptor instead.
func (DebugLinkDecision_DebugSwipeDirection) EnumDescriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{0, 0}
}

// *
// Structure representing button presses
type DebugLinkDecision_DebugButton int32

const (
	DebugLinkDecision_NO   DebugLinkDecision_DebugButton = 0
	DebugLinkDecision_YES  DebugLinkDecision_DebugButton = 1
	DebugLinkDecision_INFO DebugLinkDecision_DebugButton = 2
)

// Enum value maps for DebugLinkDecision_DebugButton.
var (
	DebugLinkDecision_DebugButton_name = map[int32]string{
		0: "NO",
		1: "YES",
		2: "INFO",
	}
	DebugLinkDecision_DebugButton_value = map[string]int32{
		"NO":   0,
		"YES":  1,
		"INFO": 2,
	}
)

func (x DebugLinkDecision_DebugButton) Enum() *DebugLinkDecision_DebugButton {
	p := new(DebugLinkDecision_DebugButton)
	*p = x
	return p
}

func (x DebugLinkDecision_DebugButton) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DebugLinkDecision_DebugButton) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_debug_proto_enumTypes[1].Descriptor()
}

func (DebugLinkDecision_DebugButton) Type() protoreflect.EnumType {
	return &file_messages_debug_proto_enumTypes[1]
}

func (x DebugLinkDecision_DebugButton) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DebugLinkDecision_DebugButton) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DebugLinkDecision_DebugButton(num)
	return nil
}

// Deprecated: Use DebugLinkDecision_DebugButton.Descriptor instead.
func (DebugLinkDecision_DebugButton) EnumDescriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{0, 1}
}

// *
// Request: "Press" the button on the device
// @start
// @next DebugLinkLayout
type DebugLinkDecision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Button *DebugLinkDecision_DebugButton         `protobuf:"varint,1,opt,name=button,enum=hw.trezor.messages.debug.DebugLinkDecision_DebugButton" json:"button,omitempty"`       // button press
	Swipe  *DebugLinkDecision_DebugSwipeDirection `protobuf:"varint,2,opt,name=swipe,enum=hw.trezor.messages.debug.DebugLinkDecision_DebugSwipeDirection" json:"swipe,omitempty"` // swipe direction
	Input  *string                                `protobuf:"bytes,3,opt,name=input" json:"input,omitempty"`                                                                      // keyboard input
	X      *uint32                                `protobuf:"varint,4,opt,name=x" json:"x,omitempty"`                                                                             // touch X coordinate
	Y      *uint32                                `protobuf:"varint,5,opt,name=y" json:"y,omitempty"`                                                                             // touch Y coordinate
	Wait   *bool                                  `protobuf:"varint,6,opt,name=wait" json:"wait,omitempty"`                                                                       // wait for layout change
	HoldMs *uint32                                `protobuf:"varint,7,opt,name=hold_ms,json=holdMs" json:"hold_ms,omitempty"`                                                     // touch hold duration
}

func (x *DebugLinkDecision) Reset() {
	*x = DebugLinkDecision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkDecision) ProtoMessage() {}

func (x *DebugLinkDecision) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkDecision.ProtoReflect.Descriptor instead.
func (*DebugLinkDecision) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{0}
}

func (x *DebugLinkDecision) GetButton() DebugLinkDecision_DebugButton {
	if x != nil && x.Button != nil {
		return *x.Button
	}
	return DebugLinkDecision_NO
}

func (x *DebugLinkDecision) GetSwipe() DebugLinkDecision_DebugSwipeDirection {
	if x != nil && x.Swipe != nil {
		return *x.Swipe
	}
	return DebugLinkDecision_UP
}

func (x *DebugLinkDecision) GetInput() string {
	if x != nil && x.Input != nil {
		return *x.Input
	}
	return ""
}

func (x *DebugLinkDecision) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *DebugLinkDecision) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *DebugLinkDecision) GetWait() bool {
	if x != nil && x.Wait != nil {
		return *x.Wait
	}
	return false
}

func (x *DebugLinkDecision) GetHoldMs() uint32 {
	if x != nil && x.HoldMs != nil {
		return *x.HoldMs
	}
	return 0
}

// *
// Response: Device text layout
// @end
type DebugLinkLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lines []string `protobuf:"bytes,1,rep,name=lines" json:"lines,omitempty"`
}

func (x *DebugLinkLayout) Reset() {
	*x = DebugLinkLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkLayout) ProtoMessage() {}

func (x *DebugLinkLayout) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkLayout.ProtoReflect.Descriptor instead.
func (*DebugLinkLayout) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{1}
}

func (x *DebugLinkLayout) GetLines() []string {
	if x != nil {
		return x.Lines
	}
	return nil
}

// *
// Request: Re-seed RNG with given value
// @start
// @next Success
type DebugLinkReseedRandom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *uint32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (x *DebugLinkReseedRandom) Reset() {
	*x = DebugLinkReseedRandom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkReseedRandom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkReseedRandom) ProtoMessage() {}

func (x *DebugLinkReseedRandom) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkReseedRandom.ProtoReflect.Descriptor instead.
func (*DebugLinkReseedRandom) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{2}
}

func (x *DebugLinkReseedRandom) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

// *
// Request: Start or stop recording screen changes into given target directory
// @start
// @next Success
type DebugLinkRecordScreen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetDirectory *string `protobuf:"bytes,1,opt,name=target_directory,json=targetDirectory" json:"target_directory,omitempty"` // empty or missing to stop recording
}

func (x *DebugLinkRecordScreen) Reset() {
	*x = DebugLinkRecordScreen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkRecordScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkRecordScreen) ProtoMessage() {}

func (x *DebugLinkRecordScreen) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkRecordScreen.ProtoReflect.Descriptor instead.
func (*DebugLinkRecordScreen) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{3}
}

func (x *DebugLinkRecordScreen) GetTargetDirectory() string {
	if x != nil && x.TargetDirectory != nil {
		return *x.TargetDirectory
	}
	return ""
}

// *
// Request: Computer asks for device state
// @start
// @next DebugLinkState
type DebugLinkGetState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WaitWordList *bool `protobuf:"varint,1,opt,name=wait_word_list,json=waitWordList" json:"wait_word_list,omitempty"` // Trezor T only - wait until mnemonic words are shown
	WaitWordPos  *bool `protobuf:"varint,2,opt,name=wait_word_pos,json=waitWordPos" json:"wait_word_pos,omitempty"`    // Trezor T only - wait until reset word position is requested
	WaitLayout   *bool `protobuf:"varint,3,opt,name=wait_layout,json=waitLayout" json:"wait_layout,omitempty"`         // wait until current layout changes
}

func (x *DebugLinkGetState) Reset() {
	*x = DebugLinkGetState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkGetState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkGetState) ProtoMessage() {}

func (x *DebugLinkGetState) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkGetState.ProtoReflect.Descriptor instead.
func (*DebugLinkGetState) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{4}
}

func (x *DebugLinkGetState) GetWaitWordList() bool {
	if x != nil && x.WaitWordList != nil {
		return *x.WaitWordList
	}
	return false
}

func (x *DebugLinkGetState) GetWaitWordPos() bool {
	if x != nil && x.WaitWordPos != nil {
		return *x.WaitWordPos
	}
	return false
}

func (x *DebugLinkGetState) GetWaitLayout() bool {
	if x != nil && x.WaitLayout != nil {
		return *x.WaitLayout
	}
	return false
}

// *
// Response: Device current state
// @end
type DebugLinkState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layout               []byte      `protobuf:"bytes,1,opt,name=layout" json:"layout,omitempty"`                                                                                 // raw buffer of display
	Pin                  *string     `protobuf:"bytes,2,opt,name=pin" json:"pin,omitempty"`                                                                                       // current PIN, blank if PIN is not set/enabled
	Matrix               *string     `protobuf:"bytes,3,opt,name=matrix" json:"matrix,omitempty"`                                                                                 // current PIN matrix
	MnemonicSecret       []byte      `protobuf:"bytes,4,opt,name=mnemonic_secret,json=mnemonicSecret" json:"mnemonic_secret,omitempty"`                                           // current mnemonic secret
	Node                 *HDNodeType `protobuf:"bytes,5,opt,name=node" json:"node,omitempty"`                                                                                     // current BIP-32 node
	PassphraseProtection *bool       `protobuf:"varint,6,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`                        // is node/mnemonic encrypted using passphrase?
	ResetWord            *string     `protobuf:"bytes,7,opt,name=reset_word,json=resetWord" json:"reset_word,omitempty"`                                                          // word on device display during ResetDevice workflow
	ResetEntropy         []byte      `protobuf:"bytes,8,opt,name=reset_entropy,json=resetEntropy" json:"reset_entropy,omitempty"`                                                 // current entropy during ResetDevice workflow
	RecoveryFakeWord     *string     `protobuf:"bytes,9,opt,name=recovery_fake_word,json=recoveryFakeWord" json:"recovery_fake_word,omitempty"`                                   // (fake) word on display during RecoveryDevice workflow
	RecoveryWordPos      *uint32     `protobuf:"varint,10,opt,name=recovery_word_pos,json=recoveryWordPos" json:"recovery_word_pos,omitempty"`                                    // index of mnemonic word the device is expecting during RecoveryDevice workflow
	ResetWordPos         *uint32     `protobuf:"varint,11,opt,name=reset_word_pos,json=resetWordPos" json:"reset_word_pos,omitempty"`                                             // index of mnemonic word the device is expecting during ResetDevice workflow
	MnemonicType         *BackupType `protobuf:"varint,12,opt,name=mnemonic_type,json=mnemonicType,enum=hw.trezor.messages.management.BackupType" json:"mnemonic_type,omitempty"` // current mnemonic type (BIP-39/SLIP-39)
	LayoutLines          []string    `protobuf:"bytes,13,rep,name=layout_lines,json=layoutLines" json:"layout_lines,omitempty"`                                                   // current layout text
}

func (x *DebugLinkState) Reset() {
	*x = DebugLinkState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkState) ProtoMessage() {}

func (x *DebugLinkState) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkState.ProtoReflect.Descriptor instead.
func (*DebugLinkState) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{5}
}

func (x *DebugLinkState) GetLayout() []byte {
	if x != nil {
		return x.Layout
	}
	return nil
}

func (x *DebugLinkState) GetPin() string {
	if x != nil && x.Pin != nil {
		return *x.Pin
	}
	return ""
}

func (x *DebugLinkState) GetMatrix() string {
	if x != nil && x.Matrix != nil {
		return *x.Matrix
	}
	return ""
}

func (x *DebugLinkState) GetMnemonicSecret() []byte {
	if x != nil {
		return x.MnemonicSecret
	}
	return nil
}

func (x *DebugLinkState) GetNode() *HDNodeType {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *DebugLinkState) GetPassphraseProtection() bool {
	if x != nil && x.PassphraseProtection != nil {
		return *x.PassphraseProtection
	}
	return false
}

func (x *DebugLinkState) GetResetWord() string {
	if x != nil && x.ResetWord != nil {
		return *x.ResetWord
	}
	return ""
}

func (x *DebugLinkState) GetResetEntropy() []byte {
	if x != nil {
		return x.ResetEntropy
	}
	return nil
}

func (x *DebugLinkState) GetRecoveryFakeWord() string {
	if x != nil && x.RecoveryFakeWord != nil {
		return *x.RecoveryFakeWord
	}
	return ""
}

func (x *DebugLinkState) GetRecoveryWordPos() uint32 {
	if x != nil && x.RecoveryWordPos != nil {
		return *x.RecoveryWordPos
	}
	return 0
}

func (x *DebugLinkState) GetResetWordPos() uint32 {
	if x != nil && x.ResetWordPos != nil {
		return *x.ResetWordPos
	}
	return 0
}

func (x *DebugLinkState) GetMnemonicType() BackupType {
	if x != nil && x.MnemonicType != nil {
		return *x.MnemonicType
	}
	return BackupType_Bip39
}

func (x *DebugLinkState) GetLayoutLines() []string {
	if x != nil {
		return x.LayoutLines
	}
	return nil
}

// *
// Request: Ask device to restart
// @start
type DebugLinkStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DebugLinkStop) Reset() {
	*x = DebugLinkStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkStop) ProtoMessage() {}

func (x *DebugLinkStop) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkStop.ProtoReflect.Descriptor instead.
func (*DebugLinkStop) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{6}
}

// *
// Response: Device wants host to log event
// @ignore
type DebugLinkLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level  *uint32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Bucket *string `protobuf:"bytes,2,opt,name=bucket" json:"bucket,omitempty"`
	Text   *string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
}

func (x *DebugLinkLog) Reset() {
	*x = DebugLinkLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkLog) ProtoMessage() {}

func (x *DebugLinkLog) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkLog.ProtoReflect.Descriptor instead.
func (*DebugLinkLog) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{7}
}

func (x *DebugLinkLog) GetLevel() uint32 {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return 0
}

func (x *DebugLinkLog) GetBucket() string {
	if x != nil && x.Bucket != nil {
		return *x.Bucket
	}
	return ""
}

func (x *DebugLinkLog) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

// *
// Request: Read memory from device
// @start
// @next DebugLinkMemory
type DebugLinkMemoryRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *uint32 `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Length  *uint32 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
}

func (x *DebugLinkMemoryRead) Reset() {
	*x = DebugLinkMemoryRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkMemoryRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkMemoryRead) ProtoMessage() {}

func (x *DebugLinkMemoryRead) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkMemoryRead.ProtoReflect.Descriptor instead.
func (*DebugLinkMemoryRead) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{8}
}

func (x *DebugLinkMemoryRead) GetAddress() uint32 {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return 0
}

func (x *DebugLinkMemoryRead) GetLength() uint32 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

// *
// Response: Device sends memory back
// @end
type DebugLinkMemory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Memory []byte `protobuf:"bytes,1,opt,name=memory" json:"memory,omitempty"`
}

func (x *DebugLinkMemory) Reset() {
	*x = DebugLinkMemory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkMemory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkMemory) ProtoMessage() {}

func (x *DebugLinkMemory) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkMemory.ProtoReflect.Descriptor instead.
func (*DebugLinkMemory) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{9}
}

func (x *DebugLinkMemory) GetMemory() []byte {
	if x != nil {
		return x.Memory
	}
	return nil
}

// *
// Request: Write memory to device.
// WARNING: Writing to the wrong location can irreparably break the device.
// @start
// @next Success
// @next Failure
type DebugLinkMemoryWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address *uint32 `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	Memory  []byte  `protobuf:"bytes,2,opt,name=memory" json:"memory,omitempty"`
	Flash   *bool   `protobuf:"varint,3,opt,name=flash" json:"flash,omitempty"`
}

func (x *DebugLinkMemoryWrite) Reset() {
	*x = DebugLinkMemoryWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkMemoryWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkMemoryWrite) ProtoMessage() {}

func (x *DebugLinkMemoryWrite) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkMemoryWrite.ProtoReflect.Descriptor instead.
func (*DebugLinkMemoryWrite) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{10}
}

func (x *DebugLinkMemoryWrite) GetAddress() uint32 {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return 0
}

func (x *DebugLinkMemoryWrite) GetMemory() []byte {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *DebugLinkMemoryWrite) GetFlash() bool {
	if x != nil && x.Flash != nil {
		return *x.Flash
	}
	return false
}

// *
// Request: Erase block of flash on device
// WARNING: Writing to the wrong location can irreparably break the device.
// @start
// @next Success
// @next Failure
type DebugLinkFlashErase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sector *uint32 `protobuf:"varint,1,opt,name=sector" json:"sector,omitempty"`
}

func (x *DebugLinkFlashErase) Reset() {
	*x = DebugLinkFlashErase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkFlashErase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkFlashErase) ProtoMessage() {}

func (x *DebugLinkFlashErase) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkFlashErase.ProtoReflect.Descriptor instead.
func (*DebugLinkFlashErase) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{11}
}

func (x *DebugLinkFlashErase) GetSector() uint32 {
	if x != nil && x.Sector != nil {
		return *x.Sector
	}
	return 0
}

// *
// Request: Erase the SD card
// @start
// @next Success
// @next Failure
type DebugLinkEraseSdCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Format *bool `protobuf:"varint,1,opt,name=format" json:"format,omitempty"` // if true, the card will be formatted to FAT32.
}

func (x *DebugLinkEraseSdCard) Reset() {
	*x = DebugLinkEraseSdCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkEraseSdCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkEraseSdCard) ProtoMessage() {}

func (x *DebugLinkEraseSdCard) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkEraseSdCard.ProtoReflect.Descriptor instead.
func (*DebugLinkEraseSdCard) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{12}
}

func (x *DebugLinkEraseSdCard) GetFormat() bool {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return false
}

// *
// Request: Start or stop tracking layout changes
// @start
// @next Success
type DebugLinkWatchLayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Watch *bool `protobuf:"varint,1,opt,name=watch" json:"watch,omitempty"` // if true, start watching layout.
}

func (x *DebugLinkWatchLayout) Reset() {
	*x = DebugLinkWatchLayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_debug_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugLinkWatchLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugLinkWatchLayout) ProtoMessage() {}

func (x *DebugLinkWatchLayout) ProtoReflect() protoreflect.Message {
	mi := &file_messages_debug_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugLinkWatchLayout.ProtoReflect.Descriptor instead.
func (*DebugLinkWatchLayout) Descriptor() ([]byte, []int) {
	return file_messages_debug_proto_rawDescGZIP(), []int{13}
}

func (x *DebugLinkWatchLayout) GetWatch() bool {
	if x != nil && x.Watch != nil {
		return *x.Watch
	}
	return false
}

var File_messages_debug_proto protoreflect.FileDescriptor

var file_messages_debug_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f,
	0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x1a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x82, 0x03, 0x0a, 0x11, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72,
	0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x05, 0x73, 0x77, 0x69,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72,
	0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x77, 0x69, 0x70, 0x65,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x73, 0x77, 0x69, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x6f, 0x6c, 0x64, 0x4d, 0x73, 0x22,
	0x3c, 0x0a, 0x13, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x77, 0x69, 0x70, 0x65, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x22, 0x28, 0x0a,
	0x0b, 0x44, 0x65, 0x62, 0x75, 0x67, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02,
	0x4e, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x22, 0x27, 0x0a, 0x0f, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0x2d, 0x0a, 0x15, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73,
	0x65, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x42, 0x0a, 0x15, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x22, 0x7e, 0x0a, 0x11, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x61, 0x69, 0x74,
	0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x77, 0x61, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x50,
	0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x77, 0x61, 0x69, 0x74, 0x4c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x22, 0xa2, 0x04, 0x0a, 0x0e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x39, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x44, 0x4e, 0x6f,
	0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x15,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x73, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x70,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x6f, 0x70, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x61, 0x6b, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x46, 0x61, 0x6b, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x6f,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x50, 0x6f, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x68,
	0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x62, 0x75,
	0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x6f, 0x70, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x47, 0x0a, 0x13, 0x44,
	0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0x29, 0x0a, 0x0f, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e,
	0x6b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22,
	0x5e, 0x0a, 0x14, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x73, 0x68, 0x22,
	0x2d, 0x0a, 0x13, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x45, 0x72, 0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x22, 0x2e,
	0x0a, 0x14, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x45, 0x72, 0x61, 0x73, 0x65,
	0x53, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x2c,
	0x0a, 0x14, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x77, 0x61, 0x74, 0x63, 0x68, 0x42, 0x3d, 0x0a, 0x23,
	0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69, 0x6c, 0x61, 0x62, 0x73, 0x2e,
	0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x42, 0x12, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x80, 0xa6, 0x1d, 0x01,
}

var (
	file_messages_debug_proto_rawDescOnce sync.Once
	file_messages_debug_proto_rawDescData = file_messages_debug_proto_rawDesc
)

func file_messages_debug_proto_rawDescGZIP() []byte {
	file_messages_debug_proto_rawDescOnce.Do(func() {
		file_messages_debug_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_debug_proto_rawDescData)
	})
	return file_messages_debug_proto_rawDescData
}

var file_messages_debug_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_messages_debug_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_messages_debug_proto_goTypes = []interface{}{
	(DebugLinkDecision_DebugSwipeDirection)(0), // 0: hw.trezor.messages.debug.DebugLinkDecision.DebugSwipeDirection
	(DebugLinkDecision_DebugButton)(0),         // 1: hw.trezor.messages.debug.DebugLinkDecision.DebugButton
	(*DebugLinkDecision)(nil),                  // 2: hw.trezor.messages.debug.DebugLinkDecision
	(*DebugLinkLayout)(nil),                    // 3: hw.trezor.messages.debug.DebugLinkLayout
	(*DebugLinkReseedRandom)(nil),              // 4: hw.trezor.messages.debug.DebugLinkReseedRandom
	(*DebugLinkRecordScreen)(nil),              // 5: hw.trezor.messages.debug.DebugLinkRecordScreen
	(*DebugLinkGetState)(nil),                  // 6: hw.trezor.messages.debug.DebugLinkGetState
	(*DebugLinkState)(nil),                     // 7: hw.trezor.messages.debug.DebugLinkState
	(*DebugLinkStop)(nil),                      // 8: hw.trezor.messages.debug.DebugLinkStop
	(*DebugLinkLog)(nil),                       // 9: hw.trezor.messages.debug.DebugLinkLog
	(*DebugLinkMemoryRead)(nil),                // 10: hw.trezor.messages.debug.DebugLinkMemoryRead
	(*DebugLinkMemory)(nil),                    // 11: hw.trezor.messages.debug.DebugLinkMemory
	(*DebugLinkMemoryWrite)(nil),               // 12: hw.trezor.messages.debug.DebugLinkMemoryWrite
	(*DebugLinkFlashErase)(nil),                // 13: hw.trezor.messages.debug.DebugLinkFlashErase
	(*DebugLinkEraseSdCard)(nil),               // 14: hw.trezor.messages.debug.DebugLinkEraseSdCard
	(*DebugLinkWatchLayout)(nil),               // 15: hw.trezor.messages.debug.DebugLinkWatchLayout
	(*HDNodeType)(nil),                         // 16: hw.trezor.messages.common.HDNodeType
	(BackupType)(0),                            // 17: hw.trezor.messages.management.BackupType
}
var file_messages_debug_proto_depIdxs = []int32{
	1,  // 0: hw.trezor.messages.debug.DebugLinkDecision.button:type_name -> hw.trezor.messages.debug.DebugLinkDecision.DebugButton
	0,  // 1: hw.trezor.messages.debug.DebugLinkDecision.swipe:type_name -> hw.trezor.messages.debug.DebugLinkDecision.DebugSwipeDirection
	16, // 2: hw.trezor.messages.debug.DebugLinkState.node:type_name -> hw.trezor.messages.common.HDNodeType
	17, // 3: hw.trezor.messages.debug.DebugLinkState.mnemonic_type:type_name -> hw.trezor.messages.management.BackupType
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_messages_debug_proto_init() }
func file_messages_debug_proto_init() {
	if File_messages_debug_proto != nil {
		return
	}
	file_messages_proto_init()
	file_messages_common_proto_init()
	file_messages_management_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_debug_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkDecision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkReseedRandom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkRecordScreen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkGetState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkMemoryRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkMemory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkMemoryWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkFlashErase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkEraseSdCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_debug_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugLinkWatchLayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_debug_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_debug_proto_goTypes,
		DependencyIndexes: file_messages_debug_proto_depIdxs,
		EnumInfos:         file_messages_debug_proto_enumTypes,
		MessageInfos:      file_messages_debug_proto_msgTypes,
	}.Build()
	File_messages_debug_proto = out.File
	file_messages_debug_proto_rawDesc = nil
	file_messages_debug_proto_goTypes = nil
	file_messages_debug_proto_depIdxs = nil
}
