// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: messages-eos.proto

package trproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Request: Ask device for Eos public key corresponding to address_n path
// @start
// @next EosPublicKey
// @next Failure
type EosGetPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN    []uint32 `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`          // BIP-32 path to derive the key from master node 44'/194'/0'
	ShowDisplay *bool    `protobuf:"varint,2,opt,name=show_display,json=showDisplay" json:"show_display,omitempty"` // optionally show on display before sending the result
}

func (x *EosGetPublicKey) Reset() {
	*x = EosGetPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosGetPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosGetPublicKey) ProtoMessage() {}

func (x *EosGetPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosGetPublicKey.ProtoReflect.Descriptor instead.
func (*EosGetPublicKey) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{0}
}

func (x *EosGetPublicKey) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *EosGetPublicKey) GetShowDisplay() bool {
	if x != nil && x.ShowDisplay != nil {
		return *x.ShowDisplay
	}
	return false
}

// *
// Response: Contains an Eos public key derived from device private seed
// @end
type EosPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WifPublicKey *string `protobuf:"bytes,1,req,name=wif_public_key,json=wifPublicKey" json:"wif_public_key,omitempty"` // EOS pub key in Base58 encoding
	RawPublicKey []byte  `protobuf:"bytes,2,req,name=raw_public_key,json=rawPublicKey" json:"raw_public_key,omitempty"` // Raw public key
}

func (x *EosPublicKey) Reset() {
	*x = EosPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosPublicKey) ProtoMessage() {}

func (x *EosPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosPublicKey.ProtoReflect.Descriptor instead.
func (*EosPublicKey) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{1}
}

func (x *EosPublicKey) GetWifPublicKey() string {
	if x != nil && x.WifPublicKey != nil {
		return *x.WifPublicKey
	}
	return ""
}

func (x *EosPublicKey) GetRawPublicKey() []byte {
	if x != nil {
		return x.RawPublicKey
	}
	return nil
}

// *
// Request: Ask device to sign transaction
// @start
// @next EosTxRequest
// @next Failure
type EosSignTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressN   []uint32               `protobuf:"varint,1,rep,name=address_n,json=addressN" json:"address_n,omitempty"`       // BIP-32 path to derive the key from master node 44'/194'/0'
	ChainId    []byte                 `protobuf:"bytes,2,req,name=chain_id,json=chainId" json:"chain_id,omitempty"`           // 256-bit long chain id
	Header     *EosSignTx_EosTxHeader `protobuf:"bytes,3,req,name=header" json:"header,omitempty"`                            // EOS transaction header
	NumActions *uint32                `protobuf:"varint,4,req,name=num_actions,json=numActions" json:"num_actions,omitempty"` // number of actions
}

func (x *EosSignTx) Reset() {
	*x = EosSignTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosSignTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosSignTx) ProtoMessage() {}

func (x *EosSignTx) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosSignTx.ProtoReflect.Descriptor instead.
func (*EosSignTx) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{2}
}

func (x *EosSignTx) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *EosSignTx) GetChainId() []byte {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *EosSignTx) GetHeader() *EosSignTx_EosTxHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EosSignTx) GetNumActions() uint32 {
	if x != nil && x.NumActions != nil {
		return *x.NumActions
	}
	return 0
}

// *
// Response: Device asks to upload next action
// @next EosTxActionAck
type EosTxActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSize *uint32 `protobuf:"varint,1,opt,name=data_size,json=dataSize" json:"data_size,omitempty"`
}

func (x *EosTxActionRequest) Reset() {
	*x = EosTxActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionRequest) ProtoMessage() {}

func (x *EosTxActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionRequest.ProtoReflect.Descriptor instead.
func (*EosTxActionRequest) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{3}
}

func (x *EosTxActionRequest) GetDataSize() uint32 {
	if x != nil && x.DataSize != nil {
		return *x.DataSize
	}
	return 0
}

// *
// Request: Next action data that needs to be uploaded
// @next EosTxActionRequest
// @next EosSignedTx
// @next Failure
type EosTxActionAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Common       *EosTxActionAck_EosActionCommon       `protobuf:"bytes,1,req,name=common" json:"common,omitempty"`
	Transfer     *EosTxActionAck_EosActionTransfer     `protobuf:"bytes,2,opt,name=transfer" json:"transfer,omitempty"`
	Delegate     *EosTxActionAck_EosActionDelegate     `protobuf:"bytes,3,opt,name=delegate" json:"delegate,omitempty"`
	Undelegate   *EosTxActionAck_EosActionUndelegate   `protobuf:"bytes,4,opt,name=undelegate" json:"undelegate,omitempty"`
	Refund       *EosTxActionAck_EosActionRefund       `protobuf:"bytes,5,opt,name=refund" json:"refund,omitempty"`
	BuyRam       *EosTxActionAck_EosActionBuyRam       `protobuf:"bytes,6,opt,name=buy_ram,json=buyRam" json:"buy_ram,omitempty"`
	BuyRamBytes  *EosTxActionAck_EosActionBuyRamBytes  `protobuf:"bytes,7,opt,name=buy_ram_bytes,json=buyRamBytes" json:"buy_ram_bytes,omitempty"`
	SellRam      *EosTxActionAck_EosActionSellRam      `protobuf:"bytes,8,opt,name=sell_ram,json=sellRam" json:"sell_ram,omitempty"`
	VoteProducer *EosTxActionAck_EosActionVoteProducer `protobuf:"bytes,9,opt,name=vote_producer,json=voteProducer" json:"vote_producer,omitempty"`
	UpdateAuth   *EosTxActionAck_EosActionUpdateAuth   `protobuf:"bytes,10,opt,name=update_auth,json=updateAuth" json:"update_auth,omitempty"`
	DeleteAuth   *EosTxActionAck_EosActionDeleteAuth   `protobuf:"bytes,11,opt,name=delete_auth,json=deleteAuth" json:"delete_auth,omitempty"`
	LinkAuth     *EosTxActionAck_EosActionLinkAuth     `protobuf:"bytes,12,opt,name=link_auth,json=linkAuth" json:"link_auth,omitempty"`
	UnlinkAuth   *EosTxActionAck_EosActionUnlinkAuth   `protobuf:"bytes,13,opt,name=unlink_auth,json=unlinkAuth" json:"unlink_auth,omitempty"`
	NewAccount   *EosTxActionAck_EosActionNewAccount   `protobuf:"bytes,14,opt,name=new_account,json=newAccount" json:"new_account,omitempty"`
	Unknown      *EosTxActionAck_EosActionUnknown      `protobuf:"bytes,15,opt,name=unknown" json:"unknown,omitempty"`
}

func (x *EosTxActionAck) Reset() {
	*x = EosTxActionAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck) ProtoMessage() {}

func (x *EosTxActionAck) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck.ProtoReflect.Descriptor instead.
func (*EosTxActionAck) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4}
}

func (x *EosTxActionAck) GetCommon() *EosTxActionAck_EosActionCommon {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *EosTxActionAck) GetTransfer() *EosTxActionAck_EosActionTransfer {
	if x != nil {
		return x.Transfer
	}
	return nil
}

func (x *EosTxActionAck) GetDelegate() *EosTxActionAck_EosActionDelegate {
	if x != nil {
		return x.Delegate
	}
	return nil
}

func (x *EosTxActionAck) GetUndelegate() *EosTxActionAck_EosActionUndelegate {
	if x != nil {
		return x.Undelegate
	}
	return nil
}

func (x *EosTxActionAck) GetRefund() *EosTxActionAck_EosActionRefund {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *EosTxActionAck) GetBuyRam() *EosTxActionAck_EosActionBuyRam {
	if x != nil {
		return x.BuyRam
	}
	return nil
}

func (x *EosTxActionAck) GetBuyRamBytes() *EosTxActionAck_EosActionBuyRamBytes {
	if x != nil {
		return x.BuyRamBytes
	}
	return nil
}

func (x *EosTxActionAck) GetSellRam() *EosTxActionAck_EosActionSellRam {
	if x != nil {
		return x.SellRam
	}
	return nil
}

func (x *EosTxActionAck) GetVoteProducer() *EosTxActionAck_EosActionVoteProducer {
	if x != nil {
		return x.VoteProducer
	}
	return nil
}

func (x *EosTxActionAck) GetUpdateAuth() *EosTxActionAck_EosActionUpdateAuth {
	if x != nil {
		return x.UpdateAuth
	}
	return nil
}

func (x *EosTxActionAck) GetDeleteAuth() *EosTxActionAck_EosActionDeleteAuth {
	if x != nil {
		return x.DeleteAuth
	}
	return nil
}

func (x *EosTxActionAck) GetLinkAuth() *EosTxActionAck_EosActionLinkAuth {
	if x != nil {
		return x.LinkAuth
	}
	return nil
}

func (x *EosTxActionAck) GetUnlinkAuth() *EosTxActionAck_EosActionUnlinkAuth {
	if x != nil {
		return x.UnlinkAuth
	}
	return nil
}

func (x *EosTxActionAck) GetNewAccount() *EosTxActionAck_EosActionNewAccount {
	if x != nil {
		return x.NewAccount
	}
	return nil
}

func (x *EosTxActionAck) GetUnknown() *EosTxActionAck_EosActionUnknown {
	if x != nil {
		return x.Unknown
	}
	return nil
}

// *
// Response: Device returns the signature.
// The signature_* fields contain the computed transaction signature. All three fields will be present.
// @end
type EosSignedTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature *string `protobuf:"bytes,1,req,name=signature" json:"signature,omitempty"` // Computed signature
}

func (x *EosSignedTx) Reset() {
	*x = EosSignedTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosSignedTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosSignedTx) ProtoMessage() {}

func (x *EosSignedTx) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosSignedTx.ProtoReflect.Descriptor instead.
func (*EosSignedTx) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{5}
}

func (x *EosSignedTx) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

// *
// Structure representing EOS transaction header
type EosSignTx_EosTxHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expiration       *uint32 `protobuf:"varint,1,req,name=expiration" json:"expiration,omitempty"`                                         // time at which transaction expires
	RefBlockNum      *uint32 `protobuf:"varint,2,req,name=ref_block_num,json=refBlockNum" json:"ref_block_num,omitempty"`                  // 16-bit specifies a block num in the last 2^16 blocks.
	RefBlockPrefix   *uint32 `protobuf:"varint,3,req,name=ref_block_prefix,json=refBlockPrefix" json:"ref_block_prefix,omitempty"`         // specifies the lower 32 bits of the blockid at get_ref_blocknum
	MaxNetUsageWords *uint32 `protobuf:"varint,4,req,name=max_net_usage_words,json=maxNetUsageWords" json:"max_net_usage_words,omitempty"` // upper limit on total network bandwidth (in 8 byte words) billed for this transaction
	MaxCpuUsageMs    *uint32 `protobuf:"varint,5,req,name=max_cpu_usage_ms,json=maxCpuUsageMs" json:"max_cpu_usage_ms,omitempty"`          // 8-bit upper limit on the total CPU time billed for this transaction
	DelaySec         *uint32 `protobuf:"varint,6,req,name=delay_sec,json=delaySec" json:"delay_sec,omitempty"`                             // number of seconds to delay this transaction for during which it may be canceled.
}

func (x *EosSignTx_EosTxHeader) Reset() {
	*x = EosSignTx_EosTxHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosSignTx_EosTxHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosSignTx_EosTxHeader) ProtoMessage() {}

func (x *EosSignTx_EosTxHeader) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosSignTx_EosTxHeader.ProtoReflect.Descriptor instead.
func (*EosSignTx_EosTxHeader) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EosSignTx_EosTxHeader) GetExpiration() uint32 {
	if x != nil && x.Expiration != nil {
		return *x.Expiration
	}
	return 0
}

func (x *EosSignTx_EosTxHeader) GetRefBlockNum() uint32 {
	if x != nil && x.RefBlockNum != nil {
		return *x.RefBlockNum
	}
	return 0
}

func (x *EosSignTx_EosTxHeader) GetRefBlockPrefix() uint32 {
	if x != nil && x.RefBlockPrefix != nil {
		return *x.RefBlockPrefix
	}
	return 0
}

func (x *EosSignTx_EosTxHeader) GetMaxNetUsageWords() uint32 {
	if x != nil && x.MaxNetUsageWords != nil {
		return *x.MaxNetUsageWords
	}
	return 0
}

func (x *EosSignTx_EosTxHeader) GetMaxCpuUsageMs() uint32 {
	if x != nil && x.MaxCpuUsageMs != nil {
		return *x.MaxCpuUsageMs
	}
	return 0
}

func (x *EosSignTx_EosTxHeader) GetDelaySec() uint32 {
	if x != nil && x.DelaySec != nil {
		return *x.DelaySec
	}
	return 0
}

// *
// Structure representing asset type
type EosTxActionAck_EosAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount *int64  `protobuf:"zigzag64,1,req,name=amount" json:"amount,omitempty"`
	Symbol *uint64 `protobuf:"varint,2,req,name=symbol" json:"symbol,omitempty"` // Lowest 8 bits used for precision.
}

func (x *EosTxActionAck_EosAsset) Reset() {
	*x = EosTxActionAck_EosAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosAsset) ProtoMessage() {}

func (x *EosTxActionAck_EosAsset) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosAsset.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosAsset) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 0}
}

func (x *EosTxActionAck_EosAsset) GetAmount() int64 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

func (x *EosTxActionAck_EosAsset) GetSymbol() uint64 {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return 0
}

// *
// Structure representing action permission level
type EosTxActionAck_EosPermissionLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actor      *uint64 `protobuf:"varint,1,req,name=actor" json:"actor,omitempty"`
	Permission *uint64 `protobuf:"varint,2,req,name=permission" json:"permission,omitempty"`
}

func (x *EosTxActionAck_EosPermissionLevel) Reset() {
	*x = EosTxActionAck_EosPermissionLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosPermissionLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosPermissionLevel) ProtoMessage() {}

func (x *EosTxActionAck_EosPermissionLevel) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosPermissionLevel.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosPermissionLevel) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 1}
}

func (x *EosTxActionAck_EosPermissionLevel) GetActor() uint64 {
	if x != nil && x.Actor != nil {
		return *x.Actor
	}
	return 0
}

func (x *EosTxActionAck_EosPermissionLevel) GetPermission() uint64 {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return 0
}

// *
// Structure representing auth key
type EosTxActionAck_EosAuthorizationKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *uint32  `protobuf:"varint,1,req,name=type" json:"type,omitempty"`
	Key      []byte   `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`                            // Explicit public key bytes; when present, address_n must be empty
	AddressN []uint32 `protobuf:"varint,3,rep,name=address_n,json=addressN" json:"address_n,omitempty"` // BIP-32 path to derive key; when filled out, key must not be present
	Weight   *uint32  `protobuf:"varint,4,req,name=weight" json:"weight,omitempty"`
}

func (x *EosTxActionAck_EosAuthorizationKey) Reset() {
	*x = EosTxActionAck_EosAuthorizationKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosAuthorizationKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosAuthorizationKey) ProtoMessage() {}

func (x *EosTxActionAck_EosAuthorizationKey) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosAuthorizationKey.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosAuthorizationKey) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 2}
}

func (x *EosTxActionAck_EosAuthorizationKey) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *EosTxActionAck_EosAuthorizationKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EosTxActionAck_EosAuthorizationKey) GetAddressN() []uint32 {
	if x != nil {
		return x.AddressN
	}
	return nil
}

func (x *EosTxActionAck_EosAuthorizationKey) GetWeight() uint32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

// *
// Structure representing auth account
type EosTxActionAck_EosAuthorizationAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *EosTxActionAck_EosPermissionLevel `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Weight  *uint32                            `protobuf:"varint,2,req,name=weight" json:"weight,omitempty"`
}

func (x *EosTxActionAck_EosAuthorizationAccount) Reset() {
	*x = EosTxActionAck_EosAuthorizationAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosAuthorizationAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosAuthorizationAccount) ProtoMessage() {}

func (x *EosTxActionAck_EosAuthorizationAccount) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosAuthorizationAccount.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosAuthorizationAccount) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 3}
}

func (x *EosTxActionAck_EosAuthorizationAccount) GetAccount() *EosTxActionAck_EosPermissionLevel {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *EosTxActionAck_EosAuthorizationAccount) GetWeight() uint32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

// *
// Structure representing auth delays
type EosTxActionAck_EosAuthorizationWait struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WaitSec *uint32 `protobuf:"varint,1,req,name=wait_sec,json=waitSec" json:"wait_sec,omitempty"`
	Weight  *uint32 `protobuf:"varint,2,req,name=weight" json:"weight,omitempty"`
}

func (x *EosTxActionAck_EosAuthorizationWait) Reset() {
	*x = EosTxActionAck_EosAuthorizationWait{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosAuthorizationWait) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosAuthorizationWait) ProtoMessage() {}

func (x *EosTxActionAck_EosAuthorizationWait) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosAuthorizationWait.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosAuthorizationWait) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 4}
}

func (x *EosTxActionAck_EosAuthorizationWait) GetWaitSec() uint32 {
	if x != nil && x.WaitSec != nil {
		return *x.WaitSec
	}
	return 0
}

func (x *EosTxActionAck_EosAuthorizationWait) GetWeight() uint32 {
	if x != nil && x.Weight != nil {
		return *x.Weight
	}
	return 0
}

// *
// Structure representing authorization settings
type EosTxActionAck_EosAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threshold *uint32                                   `protobuf:"varint,1,req,name=threshold" json:"threshold,omitempty"`
	Keys      []*EosTxActionAck_EosAuthorizationKey     `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
	Accounts  []*EosTxActionAck_EosAuthorizationAccount `protobuf:"bytes,3,rep,name=accounts" json:"accounts,omitempty"`
	Waits     []*EosTxActionAck_EosAuthorizationWait    `protobuf:"bytes,4,rep,name=waits" json:"waits,omitempty"`
}

func (x *EosTxActionAck_EosAuthorization) Reset() {
	*x = EosTxActionAck_EosAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosAuthorization) ProtoMessage() {}

func (x *EosTxActionAck_EosAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosAuthorization.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosAuthorization) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 5}
}

func (x *EosTxActionAck_EosAuthorization) GetThreshold() uint32 {
	if x != nil && x.Threshold != nil {
		return *x.Threshold
	}
	return 0
}

func (x *EosTxActionAck_EosAuthorization) GetKeys() []*EosTxActionAck_EosAuthorizationKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *EosTxActionAck_EosAuthorization) GetAccounts() []*EosTxActionAck_EosAuthorizationAccount {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *EosTxActionAck_EosAuthorization) GetWaits() []*EosTxActionAck_EosAuthorizationWait {
	if x != nil {
		return x.Waits
	}
	return nil
}

// *
// Structure representing the common part of every action
type EosTxActionAck_EosActionCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account       *uint64                              `protobuf:"varint,1,req,name=account" json:"account,omitempty"` // Contract name
	Name          *uint64                              `protobuf:"varint,2,req,name=name" json:"name,omitempty"`       // Action name
	Authorization []*EosTxActionAck_EosPermissionLevel `protobuf:"bytes,3,rep,name=authorization" json:"authorization,omitempty"`
}

func (x *EosTxActionAck_EosActionCommon) Reset() {
	*x = EosTxActionAck_EosActionCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionCommon) ProtoMessage() {}

func (x *EosTxActionAck_EosActionCommon) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionCommon.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionCommon) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 6}
}

func (x *EosTxActionAck_EosActionCommon) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionCommon) GetName() uint64 {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return 0
}

func (x *EosTxActionAck_EosActionCommon) GetAuthorization() []*EosTxActionAck_EosPermissionLevel {
	if x != nil {
		return x.Authorization
	}
	return nil
}

// *
// Structure representing transfer data structure
type EosTxActionAck_EosActionTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *uint64                  `protobuf:"varint,1,req,name=sender" json:"sender,omitempty"` // Asset sender
	Receiver *uint64                  `protobuf:"varint,2,req,name=receiver" json:"receiver,omitempty"`
	Quantity *EosTxActionAck_EosAsset `protobuf:"bytes,3,req,name=quantity" json:"quantity,omitempty"`
	Memo     *string                  `protobuf:"bytes,4,req,name=memo" json:"memo,omitempty"`
}

func (x *EosTxActionAck_EosActionTransfer) Reset() {
	*x = EosTxActionAck_EosActionTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionTransfer) ProtoMessage() {}

func (x *EosTxActionAck_EosActionTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionTransfer.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionTransfer) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 7}
}

func (x *EosTxActionAck_EosActionTransfer) GetSender() uint64 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

func (x *EosTxActionAck_EosActionTransfer) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *EosTxActionAck_EosActionTransfer) GetQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *EosTxActionAck_EosActionTransfer) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

// *
// Structure representing delegation data structure
type EosTxActionAck_EosActionDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      *uint64                  `protobuf:"varint,1,req,name=sender" json:"sender,omitempty"`
	Receiver    *uint64                  `protobuf:"varint,2,req,name=receiver" json:"receiver,omitempty"`
	NetQuantity *EosTxActionAck_EosAsset `protobuf:"bytes,3,req,name=net_quantity,json=netQuantity" json:"net_quantity,omitempty"` // Asset format '1.0000 EOS'
	CpuQuantity *EosTxActionAck_EosAsset `protobuf:"bytes,4,req,name=cpu_quantity,json=cpuQuantity" json:"cpu_quantity,omitempty"` // Asset format '1.0000 EOS'
	Transfer    *bool                    `protobuf:"varint,5,req,name=transfer" json:"transfer,omitempty"`                         // Transfer delegated tokens or not.
}

func (x *EosTxActionAck_EosActionDelegate) Reset() {
	*x = EosTxActionAck_EosActionDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionDelegate) ProtoMessage() {}

func (x *EosTxActionAck_EosActionDelegate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionDelegate.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionDelegate) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 8}
}

func (x *EosTxActionAck_EosActionDelegate) GetSender() uint64 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

func (x *EosTxActionAck_EosActionDelegate) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *EosTxActionAck_EosActionDelegate) GetNetQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.NetQuantity
	}
	return nil
}

func (x *EosTxActionAck_EosActionDelegate) GetCpuQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.CpuQuantity
	}
	return nil
}

func (x *EosTxActionAck_EosActionDelegate) GetTransfer() bool {
	if x != nil && x.Transfer != nil {
		return *x.Transfer
	}
	return false
}

// *
// Structure representing the removal of delegated resources from `sender`
type EosTxActionAck_EosActionUndelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender      *uint64                  `protobuf:"varint,1,req,name=sender" json:"sender,omitempty"`
	Receiver    *uint64                  `protobuf:"varint,2,req,name=receiver" json:"receiver,omitempty"`
	NetQuantity *EosTxActionAck_EosAsset `protobuf:"bytes,3,req,name=net_quantity,json=netQuantity" json:"net_quantity,omitempty"` // Asset format '1.0000 EOS'
	CpuQuantity *EosTxActionAck_EosAsset `protobuf:"bytes,4,req,name=cpu_quantity,json=cpuQuantity" json:"cpu_quantity,omitempty"` // Asset format '1.0000 EOS'
}

func (x *EosTxActionAck_EosActionUndelegate) Reset() {
	*x = EosTxActionAck_EosActionUndelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionUndelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionUndelegate) ProtoMessage() {}

func (x *EosTxActionAck_EosActionUndelegate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionUndelegate.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionUndelegate) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 9}
}

func (x *EosTxActionAck_EosActionUndelegate) GetSender() uint64 {
	if x != nil && x.Sender != nil {
		return *x.Sender
	}
	return 0
}

func (x *EosTxActionAck_EosActionUndelegate) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *EosTxActionAck_EosActionUndelegate) GetNetQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.NetQuantity
	}
	return nil
}

func (x *EosTxActionAck_EosActionUndelegate) GetCpuQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.CpuQuantity
	}
	return nil
}

// *
// Structure representing fallback if undelegate wasnt executed automaticaly.
type EosTxActionAck_EosActionRefund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *uint64 `protobuf:"varint,1,req,name=owner" json:"owner,omitempty"`
}

func (x *EosTxActionAck_EosActionRefund) Reset() {
	*x = EosTxActionAck_EosActionRefund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionRefund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionRefund) ProtoMessage() {}

func (x *EosTxActionAck_EosActionRefund) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionRefund.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionRefund) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 10}
}

func (x *EosTxActionAck_EosActionRefund) GetOwner() uint64 {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return 0
}

// *
// Structure representing buying RAM operation for EOS tokens
type EosTxActionAck_EosActionBuyRam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payer    *uint64                  `protobuf:"varint,1,req,name=payer" json:"payer,omitempty"`
	Receiver *uint64                  `protobuf:"varint,2,req,name=receiver" json:"receiver,omitempty"`
	Quantity *EosTxActionAck_EosAsset `protobuf:"bytes,3,req,name=quantity" json:"quantity,omitempty"` // Asset format '1.0000 EOS'
}

func (x *EosTxActionAck_EosActionBuyRam) Reset() {
	*x = EosTxActionAck_EosActionBuyRam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionBuyRam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionBuyRam) ProtoMessage() {}

func (x *EosTxActionAck_EosActionBuyRam) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionBuyRam.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionBuyRam) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 11}
}

func (x *EosTxActionAck_EosActionBuyRam) GetPayer() uint64 {
	if x != nil && x.Payer != nil {
		return *x.Payer
	}
	return 0
}

func (x *EosTxActionAck_EosActionBuyRam) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *EosTxActionAck_EosActionBuyRam) GetQuantity() *EosTxActionAck_EosAsset {
	if x != nil {
		return x.Quantity
	}
	return nil
}

// *
// Structure representing buying bytes according to RAM market price.
type EosTxActionAck_EosActionBuyRamBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payer    *uint64 `protobuf:"varint,1,req,name=payer" json:"payer,omitempty"`
	Receiver *uint64 `protobuf:"varint,2,req,name=receiver" json:"receiver,omitempty"`
	Bytes    *uint32 `protobuf:"varint,3,req,name=bytes" json:"bytes,omitempty"` // Number of bytes
}

func (x *EosTxActionAck_EosActionBuyRamBytes) Reset() {
	*x = EosTxActionAck_EosActionBuyRamBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionBuyRamBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionBuyRamBytes) ProtoMessage() {}

func (x *EosTxActionAck_EosActionBuyRamBytes) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionBuyRamBytes.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionBuyRamBytes) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 12}
}

func (x *EosTxActionAck_EosActionBuyRamBytes) GetPayer() uint64 {
	if x != nil && x.Payer != nil {
		return *x.Payer
	}
	return 0
}

func (x *EosTxActionAck_EosActionBuyRamBytes) GetReceiver() uint64 {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return 0
}

func (x *EosTxActionAck_EosActionBuyRamBytes) GetBytes() uint32 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

// *
// Structure representing sell RAM
type EosTxActionAck_EosActionSellRam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *uint64 `protobuf:"varint,1,req,name=account" json:"account,omitempty"`
	Bytes   *uint64 `protobuf:"varint,2,req,name=bytes" json:"bytes,omitempty"` // Number of bytes
}

func (x *EosTxActionAck_EosActionSellRam) Reset() {
	*x = EosTxActionAck_EosActionSellRam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionSellRam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionSellRam) ProtoMessage() {}

func (x *EosTxActionAck_EosActionSellRam) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionSellRam.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionSellRam) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 13}
}

func (x *EosTxActionAck_EosActionSellRam) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionSellRam) GetBytes() uint64 {
	if x != nil && x.Bytes != nil {
		return *x.Bytes
	}
	return 0
}

// *
// Structure representing voting. Currently, there could be up to 30 producers.
type EosTxActionAck_EosActionVoteProducer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter     *uint64  `protobuf:"varint,1,req,name=voter" json:"voter,omitempty"`         // Voter account
	Proxy     *uint64  `protobuf:"varint,2,req,name=proxy" json:"proxy,omitempty"`         // Proxy voter account
	Producers []uint64 `protobuf:"varint,3,rep,name=producers" json:"producers,omitempty"` // List of producers
}

func (x *EosTxActionAck_EosActionVoteProducer) Reset() {
	*x = EosTxActionAck_EosActionVoteProducer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionVoteProducer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionVoteProducer) ProtoMessage() {}

func (x *EosTxActionAck_EosActionVoteProducer) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionVoteProducer.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionVoteProducer) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 14}
}

func (x *EosTxActionAck_EosActionVoteProducer) GetVoter() uint64 {
	if x != nil && x.Voter != nil {
		return *x.Voter
	}
	return 0
}

func (x *EosTxActionAck_EosActionVoteProducer) GetProxy() uint64 {
	if x != nil && x.Proxy != nil {
		return *x.Proxy
	}
	return 0
}

func (x *EosTxActionAck_EosActionVoteProducer) GetProducers() []uint64 {
	if x != nil {
		return x.Producers
	}
	return nil
}

// *
// Structure representing update authorization.
type EosTxActionAck_EosActionUpdateAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    *uint64                          `protobuf:"varint,1,req,name=account" json:"account,omitempty"`
	Permission *uint64                          `protobuf:"varint,2,req,name=permission" json:"permission,omitempty"`
	Parent     *uint64                          `protobuf:"varint,3,req,name=parent" json:"parent,omitempty"`
	Auth       *EosTxActionAck_EosAuthorization `protobuf:"bytes,4,req,name=auth" json:"auth,omitempty"`
}

func (x *EosTxActionAck_EosActionUpdateAuth) Reset() {
	*x = EosTxActionAck_EosActionUpdateAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionUpdateAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionUpdateAuth) ProtoMessage() {}

func (x *EosTxActionAck_EosActionUpdateAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionUpdateAuth.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionUpdateAuth) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 15}
}

func (x *EosTxActionAck_EosActionUpdateAuth) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionUpdateAuth) GetPermission() uint64 {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return 0
}

func (x *EosTxActionAck_EosActionUpdateAuth) GetParent() uint64 {
	if x != nil && x.Parent != nil {
		return *x.Parent
	}
	return 0
}

func (x *EosTxActionAck_EosActionUpdateAuth) GetAuth() *EosTxActionAck_EosAuthorization {
	if x != nil {
		return x.Auth
	}
	return nil
}

// *
// Structure representing delete authorization.
type EosTxActionAck_EosActionDeleteAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    *uint64 `protobuf:"varint,1,req,name=account" json:"account,omitempty"`
	Permission *uint64 `protobuf:"varint,2,req,name=permission" json:"permission,omitempty"`
}

func (x *EosTxActionAck_EosActionDeleteAuth) Reset() {
	*x = EosTxActionAck_EosActionDeleteAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionDeleteAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionDeleteAuth) ProtoMessage() {}

func (x *EosTxActionAck_EosActionDeleteAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionDeleteAuth.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionDeleteAuth) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 16}
}

func (x *EosTxActionAck_EosActionDeleteAuth) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionDeleteAuth) GetPermission() uint64 {
	if x != nil && x.Permission != nil {
		return *x.Permission
	}
	return 0
}

// *
// Structure representing link authorization to action.
type EosTxActionAck_EosActionLinkAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     *uint64 `protobuf:"varint,1,req,name=account" json:"account,omitempty"`
	Code        *uint64 `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	Type        *uint64 `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
	Requirement *uint64 `protobuf:"varint,4,req,name=requirement" json:"requirement,omitempty"`
}

func (x *EosTxActionAck_EosActionLinkAuth) Reset() {
	*x = EosTxActionAck_EosActionLinkAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionLinkAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionLinkAuth) ProtoMessage() {}

func (x *EosTxActionAck_EosActionLinkAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionLinkAuth.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionLinkAuth) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 17}
}

func (x *EosTxActionAck_EosActionLinkAuth) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionLinkAuth) GetCode() uint64 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *EosTxActionAck_EosActionLinkAuth) GetType() uint64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *EosTxActionAck_EosActionLinkAuth) GetRequirement() uint64 {
	if x != nil && x.Requirement != nil {
		return *x.Requirement
	}
	return 0
}

// *
// Structure representing unlink authorization from action.
type EosTxActionAck_EosActionUnlinkAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account *uint64 `protobuf:"varint,1,req,name=account" json:"account,omitempty"`
	Code    *uint64 `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	Type    *uint64 `protobuf:"varint,3,req,name=type" json:"type,omitempty"`
}

func (x *EosTxActionAck_EosActionUnlinkAuth) Reset() {
	*x = EosTxActionAck_EosActionUnlinkAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionUnlinkAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionUnlinkAuth) ProtoMessage() {}

func (x *EosTxActionAck_EosActionUnlinkAuth) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionUnlinkAuth.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionUnlinkAuth) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 18}
}

func (x *EosTxActionAck_EosActionUnlinkAuth) GetAccount() uint64 {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return 0
}

func (x *EosTxActionAck_EosActionUnlinkAuth) GetCode() uint64 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *EosTxActionAck_EosActionUnlinkAuth) GetType() uint64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

// *
// Structure representing creation of a new account.
type EosTxActionAck_EosActionNewAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator *uint64                          `protobuf:"varint,1,req,name=creator" json:"creator,omitempty"`
	Name    *uint64                          `protobuf:"varint,2,req,name=name" json:"name,omitempty"`
	Owner   *EosTxActionAck_EosAuthorization `protobuf:"bytes,3,req,name=owner" json:"owner,omitempty"`
	Active  *EosTxActionAck_EosAuthorization `protobuf:"bytes,4,req,name=active" json:"active,omitempty"`
}

func (x *EosTxActionAck_EosActionNewAccount) Reset() {
	*x = EosTxActionAck_EosActionNewAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionNewAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionNewAccount) ProtoMessage() {}

func (x *EosTxActionAck_EosActionNewAccount) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionNewAccount.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionNewAccount) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 19}
}

func (x *EosTxActionAck_EosActionNewAccount) GetCreator() uint64 {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return 0
}

func (x *EosTxActionAck_EosActionNewAccount) GetName() uint64 {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return 0
}

func (x *EosTxActionAck_EosActionNewAccount) GetOwner() *EosTxActionAck_EosAuthorization {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *EosTxActionAck_EosActionNewAccount) GetActive() *EosTxActionAck_EosAuthorization {
	if x != nil {
		return x.Active
	}
	return nil
}

// *
// Structure representing actions not implemented above.
type EosTxActionAck_EosActionUnknown struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataSize  *uint32 `protobuf:"varint,1,req,name=data_size,json=dataSize" json:"data_size,omitempty"`
	DataChunk []byte  `protobuf:"bytes,2,req,name=data_chunk,json=dataChunk" json:"data_chunk,omitempty"`
}

func (x *EosTxActionAck_EosActionUnknown) Reset() {
	*x = EosTxActionAck_EosActionUnknown{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_eos_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EosTxActionAck_EosActionUnknown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EosTxActionAck_EosActionUnknown) ProtoMessage() {}

func (x *EosTxActionAck_EosActionUnknown) ProtoReflect() protoreflect.Message {
	mi := &file_messages_eos_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EosTxActionAck_EosActionUnknown.ProtoReflect.Descriptor instead.
func (*EosTxActionAck_EosActionUnknown) Descriptor() ([]byte, []int) {
	return file_messages_eos_proto_rawDescGZIP(), []int{4, 20}
}

func (x *EosTxActionAck_EosActionUnknown) GetDataSize() uint32 {
	if x != nil && x.DataSize != nil {
		return *x.DataSize
	}
	return 0
}

func (x *EosTxActionAck_EosActionUnknown) GetDataChunk() []byte {
	if x != nil {
		return x.DataChunk
	}
	return nil
}

var File_messages_eos_proto protoreflect.FileDescriptor

var file_messages_eos_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2d, 0x65, 0x6f, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x22, 0x51, 0x0a, 0x0f,
	0x45, 0x6f, 0x73, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x22,
	0x5a, 0x0a, 0x0c, 0x45, 0x6f, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x0e, 0x77, 0x69, 0x66, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x69, 0x66, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x0c, 0x72,
	0x61, 0x77, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x9e, 0x03, 0x0a, 0x09,
	0x45, 0x6f, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x45, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x53, 0x69,
	0x67, 0x6e, 0x54, 0x78, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0xf0, 0x01, 0x0a, 0x0b, 0x45, 0x6f,
	0x73, 0x54, 0x78, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x66,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0b, 0x72, 0x65, 0x66, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x28, 0x0a,
	0x10, 0x72, 0x65, 0x66, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x2d, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f, 0x6e,
	0x65, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4e, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x70,
	0x75, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x0d, 0x6d, 0x61, 0x78, 0x43, 0x70, 0x75, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x06, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x65, 0x63, 0x22, 0x31, 0x0a, 0x12,
	0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0xe2, 0x20, 0x0a, 0x0e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x6b, 0x12, 0x4e, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f,
	0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x68, 0x77, 0x2e,
	0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x5a,
	0x0a, 0x0a, 0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x0a,
	0x75, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x77, 0x2e,
	0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x62, 0x75,
	0x79, 0x5f, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x68, 0x77,
	0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x79,
	0x52, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x75, 0x79, 0x52, 0x61, 0x6d, 0x12, 0x5f, 0x0a, 0x0d, 0x62,
	0x75, 0x79, 0x5f, 0x72, 0x61, 0x6d, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x79, 0x52, 0x61, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52,
	0x0b, 0x62, 0x75, 0x79, 0x52, 0x61, 0x6d, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x08,
	0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6c, 0x6c, 0x52, 0x61, 0x6d, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x61, 0x6d,
	0x12, 0x61, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65,
	0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73,
	0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e,
	0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x52, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x12, 0x5b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72,
	0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b,
	0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x5b, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f,
	0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45,
	0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x55, 0x0a,
	0x09, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x5b, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74,
	0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65,
	0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63,
	0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0a, 0x75, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x5b, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a,
	0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e,
	0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51,
	0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x1a, 0x3a, 0x0a, 0x08, 0x45, 0x6f, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x12, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x1a, 0x4a, 0x0a,
	0x12, 0x45, 0x6f, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x70, 0x0a, 0x13, 0x45, 0x6f, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x86, 0x01, 0x0a, 0x17,
	0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72,
	0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f,
	0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b,
	0x2e, 0x45, 0x6f, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x1a, 0x49, 0x0a, 0x14, 0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07,
	0x77, 0x61, 0x69, 0x74, 0x53, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a,
	0xaf, 0x02, 0x0a, 0x10, 0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x4e, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x5a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f,
	0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x51,
	0x0a, 0x05, 0x77, 0x61, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x69, 0x74, 0x52, 0x05, 0x77, 0x61, 0x69, 0x74,
	0x73, 0x1a, 0xa0, 0x01, 0x0a, 0x0f, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x5f, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x68, 0x77, 0x2e,
	0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa8, 0x01, 0x0a, 0x11, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x4b,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x1a,
	0x8b, 0x02, 0x0a, 0x11, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x6e, 0x65, 0x74,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a,
	0x0c, 0x63, 0x70, 0x75, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73,
	0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0xf1, 0x01,
	0x0a, 0x13, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0c, 0x6e, 0x65, 0x74,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x0b, 0x6e, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a,
	0x0c, 0x63, 0x70, 0x75, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73,
	0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x63, 0x70, 0x75, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x1a, 0x27, 0x0a, 0x0f, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x90, 0x01, 0x0a, 0x0f, 0x45,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x79, 0x52, 0x61, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x70,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x4b, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x5e, 0x0a,
	0x14, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x75, 0x79, 0x52, 0x61, 0x6d,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x70, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x1a, 0x42, 0x0a,
	0x10, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x61,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x1a, 0x61, 0x0a, 0x15, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x6f,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x73, 0x1a, 0xb4, 0x01, 0x0a, 0x13, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x4b,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68,
	0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73, 0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a, 0x4f, 0x0a, 0x13, 0x45,
	0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x77, 0x0a, 0x11,
	0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x57, 0x0a, 0x13, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x41, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0xe3,
	0x01, 0x0a, 0x13, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73,
	0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x68, 0x77, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x65, 0x6f, 0x73, 0x2e, 0x45, 0x6f, 0x73,
	0x54, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x2e, 0x45, 0x6f, 0x73, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x1a, 0x4e, 0x0a, 0x10, 0x45, 0x6f, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x2b, 0x0a, 0x0b, 0x45, 0x6f, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x54, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x42, 0x37, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x61, 0x74, 0x6f, 0x73, 0x68, 0x69,
	0x6c, 0x61, 0x62, 0x73, 0x2e, 0x74, 0x72, 0x65, 0x7a, 0x6f, 0x72, 0x2e, 0x6c, 0x69, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x10, 0x54, 0x72, 0x65, 0x7a, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6f, 0x73,
}

var (
	file_messages_eos_proto_rawDescOnce sync.Once
	file_messages_eos_proto_rawDescData = file_messages_eos_proto_rawDesc
)

func file_messages_eos_proto_rawDescGZIP() []byte {
	file_messages_eos_proto_rawDescOnce.Do(func() {
		file_messages_eos_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_eos_proto_rawDescData)
	})
	return file_messages_eos_proto_rawDescData
}

var file_messages_eos_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_messages_eos_proto_goTypes = []interface{}{
	(*EosGetPublicKey)(nil),                        // 0: hw.trezor.messages.eos.EosGetPublicKey
	(*EosPublicKey)(nil),                           // 1: hw.trezor.messages.eos.EosPublicKey
	(*EosSignTx)(nil),                              // 2: hw.trezor.messages.eos.EosSignTx
	(*EosTxActionRequest)(nil),                     // 3: hw.trezor.messages.eos.EosTxActionRequest
	(*EosTxActionAck)(nil),                         // 4: hw.trezor.messages.eos.EosTxActionAck
	(*EosSignedTx)(nil),                            // 5: hw.trezor.messages.eos.EosSignedTx
	(*EosSignTx_EosTxHeader)(nil),                  // 6: hw.trezor.messages.eos.EosSignTx.EosTxHeader
	(*EosTxActionAck_EosAsset)(nil),                // 7: hw.trezor.messages.eos.EosTxActionAck.EosAsset
	(*EosTxActionAck_EosPermissionLevel)(nil),      // 8: hw.trezor.messages.eos.EosTxActionAck.EosPermissionLevel
	(*EosTxActionAck_EosAuthorizationKey)(nil),     // 9: hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationKey
	(*EosTxActionAck_EosAuthorizationAccount)(nil), // 10: hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationAccount
	(*EosTxActionAck_EosAuthorizationWait)(nil),    // 11: hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationWait
	(*EosTxActionAck_EosAuthorization)(nil),        // 12: hw.trezor.messages.eos.EosTxActionAck.EosAuthorization
	(*EosTxActionAck_EosActionCommon)(nil),         // 13: hw.trezor.messages.eos.EosTxActionAck.EosActionCommon
	(*EosTxActionAck_EosActionTransfer)(nil),       // 14: hw.trezor.messages.eos.EosTxActionAck.EosActionTransfer
	(*EosTxActionAck_EosActionDelegate)(nil),       // 15: hw.trezor.messages.eos.EosTxActionAck.EosActionDelegate
	(*EosTxActionAck_EosActionUndelegate)(nil),     // 16: hw.trezor.messages.eos.EosTxActionAck.EosActionUndelegate
	(*EosTxActionAck_EosActionRefund)(nil),         // 17: hw.trezor.messages.eos.EosTxActionAck.EosActionRefund
	(*EosTxActionAck_EosActionBuyRam)(nil),         // 18: hw.trezor.messages.eos.EosTxActionAck.EosActionBuyRam
	(*EosTxActionAck_EosActionBuyRamBytes)(nil),    // 19: hw.trezor.messages.eos.EosTxActionAck.EosActionBuyRamBytes
	(*EosTxActionAck_EosActionSellRam)(nil),        // 20: hw.trezor.messages.eos.EosTxActionAck.EosActionSellRam
	(*EosTxActionAck_EosActionVoteProducer)(nil),   // 21: hw.trezor.messages.eos.EosTxActionAck.EosActionVoteProducer
	(*EosTxActionAck_EosActionUpdateAuth)(nil),     // 22: hw.trezor.messages.eos.EosTxActionAck.EosActionUpdateAuth
	(*EosTxActionAck_EosActionDeleteAuth)(nil),     // 23: hw.trezor.messages.eos.EosTxActionAck.EosActionDeleteAuth
	(*EosTxActionAck_EosActionLinkAuth)(nil),       // 24: hw.trezor.messages.eos.EosTxActionAck.EosActionLinkAuth
	(*EosTxActionAck_EosActionUnlinkAuth)(nil),     // 25: hw.trezor.messages.eos.EosTxActionAck.EosActionUnlinkAuth
	(*EosTxActionAck_EosActionNewAccount)(nil),     // 26: hw.trezor.messages.eos.EosTxActionAck.EosActionNewAccount
	(*EosTxActionAck_EosActionUnknown)(nil),        // 27: hw.trezor.messages.eos.EosTxActionAck.EosActionUnknown
}
var file_messages_eos_proto_depIdxs = []int32{
	6,  // 0: hw.trezor.messages.eos.EosSignTx.header:type_name -> hw.trezor.messages.eos.EosSignTx.EosTxHeader
	13, // 1: hw.trezor.messages.eos.EosTxActionAck.common:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionCommon
	14, // 2: hw.trezor.messages.eos.EosTxActionAck.transfer:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionTransfer
	15, // 3: hw.trezor.messages.eos.EosTxActionAck.delegate:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionDelegate
	16, // 4: hw.trezor.messages.eos.EosTxActionAck.undelegate:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionUndelegate
	17, // 5: hw.trezor.messages.eos.EosTxActionAck.refund:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionRefund
	18, // 6: hw.trezor.messages.eos.EosTxActionAck.buy_ram:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionBuyRam
	19, // 7: hw.trezor.messages.eos.EosTxActionAck.buy_ram_bytes:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionBuyRamBytes
	20, // 8: hw.trezor.messages.eos.EosTxActionAck.sell_ram:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionSellRam
	21, // 9: hw.trezor.messages.eos.EosTxActionAck.vote_producer:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionVoteProducer
	22, // 10: hw.trezor.messages.eos.EosTxActionAck.update_auth:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionUpdateAuth
	23, // 11: hw.trezor.messages.eos.EosTxActionAck.delete_auth:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionDeleteAuth
	24, // 12: hw.trezor.messages.eos.EosTxActionAck.link_auth:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionLinkAuth
	25, // 13: hw.trezor.messages.eos.EosTxActionAck.unlink_auth:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionUnlinkAuth
	26, // 14: hw.trezor.messages.eos.EosTxActionAck.new_account:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionNewAccount
	27, // 15: hw.trezor.messages.eos.EosTxActionAck.unknown:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosActionUnknown
	8,  // 16: hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationAccount.account:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosPermissionLevel
	9,  // 17: hw.trezor.messages.eos.EosTxActionAck.EosAuthorization.keys:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationKey
	10, // 18: hw.trezor.messages.eos.EosTxActionAck.EosAuthorization.accounts:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationAccount
	11, // 19: hw.trezor.messages.eos.EosTxActionAck.EosAuthorization.waits:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorizationWait
	8,  // 20: hw.trezor.messages.eos.EosTxActionAck.EosActionCommon.authorization:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosPermissionLevel
	7,  // 21: hw.trezor.messages.eos.EosTxActionAck.EosActionTransfer.quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	7,  // 22: hw.trezor.messages.eos.EosTxActionAck.EosActionDelegate.net_quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	7,  // 23: hw.trezor.messages.eos.EosTxActionAck.EosActionDelegate.cpu_quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	7,  // 24: hw.trezor.messages.eos.EosTxActionAck.EosActionUndelegate.net_quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	7,  // 25: hw.trezor.messages.eos.EosTxActionAck.EosActionUndelegate.cpu_quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	7,  // 26: hw.trezor.messages.eos.EosTxActionAck.EosActionBuyRam.quantity:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAsset
	12, // 27: hw.trezor.messages.eos.EosTxActionAck.EosActionUpdateAuth.auth:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorization
	12, // 28: hw.trezor.messages.eos.EosTxActionAck.EosActionNewAccount.owner:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorization
	12, // 29: hw.trezor.messages.eos.EosTxActionAck.EosActionNewAccount.active:type_name -> hw.trezor.messages.eos.EosTxActionAck.EosAuthorization
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_messages_eos_proto_init() }
func file_messages_eos_proto_init() {
	if File_messages_eos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_eos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosGetPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosSignTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosSignedTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosSignTx_EosTxHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosPermissionLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosAuthorizationKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosAuthorizationAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosAuthorizationWait); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionUndelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionRefund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionBuyRam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionBuyRamBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionSellRam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionVoteProducer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionUpdateAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionDeleteAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionLinkAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionUnlinkAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionNewAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_eos_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EosTxActionAck_EosActionUnknown); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_eos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_eos_proto_goTypes,
		DependencyIndexes: file_messages_eos_proto_depIdxs,
		MessageInfos:      file_messages_eos_proto_msgTypes,
	}.Build()
	File_messages_eos_proto = out.File
	file_messages_eos_proto_rawDesc = nil
	file_messages_eos_proto_goTypes = nil
	file_messages_eos_proto_depIdxs = nil
}
